{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pooza\\\\Documents\\\\GitHub\\\\react\\\\seasons\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: null,\n      long: null,\n      error\n    };\n    this.state = {\n      lat: null,\n      long: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n    }, err => {\n      console.log(err);\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), \"Longitude: \", this.state.long);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Loading!\");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["C:/Users/pooza/Documents/GitHub/react/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","constructor","props","state","lat","long","error","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","err","console","log","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AAACC,MAAAA,GAAG,EAAC,IAAL;AAAUC,MAAAA,IAAI,EAAC,IAAf;AAAoBC,MAAAA;AAApB,KANW;AAGjB,SAAKH,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,IAAI,EAAE,IAAnB;AAAyBE,MAAAA,YAAY,EAAE;AAAvC,KAAb;AACD;;AAKDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI;AACV,WAAKC,QAAL,CAAc;AACZV,QAAAA,GAAG,EAAES,QAAQ,CAACE,MAAT,CAAgBC,QADT;AAEZX,QAAAA,IAAI,EAAEQ,QAAQ,CAACE,MAAT,CAAgBE;AAFV,OAAd;AAID,KANH,EAOEC,GAAG,IAAI;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEW,GAAG,CAACG;AAApB,OAAd;AACD,KAVH;AAYD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKnB,KAAL,CAAWI,YAAX,IAA2B,CAAC,KAAKJ,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWI,YAAxB,CAAP;AACD;;AACD,QAAI,CAAC,KAAKJ,KAAL,CAAWI,YAAZ,IAA4B,KAAKJ,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACa,KAAKD,KAAL,CAAWC,GADxB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,iBAGc,KAAKD,KAAL,CAAWE,IAHzB,CADF;AAOD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAvC+B;;AA0ClCR,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { lat: null, long: null, errorMessage: \"\" };\r\n  }\r\n\r\n  state = {lat:null,long:null,error\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          long: position.coords.longitude\r\n        });\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.setState({ errorMessage: err.message });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return (\r\n        <div>\r\n          Latitude: {this.state.lat}\r\n          <br />\r\n          Longitude: {this.state.long}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>Loading!</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"]},"metadata":{},"sourceType":"module"}